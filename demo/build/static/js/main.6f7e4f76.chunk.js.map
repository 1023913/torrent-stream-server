{"version":3,"sources":["components/home.tsx","helpers/client.ts","helpers/index.ts","components/play.tsx","components/dashboard.tsx","components/content.tsx","serviceWorker.ts","app.tsx","index.tsx"],"names":["HomeComponent","useState","input","setInput","history","useHistory","className","name","placeholder","value","onChange","event","target","onClick","trim","push","encodeURIComponent","apiDomain","window","location","protocol","host","streamUrl","apiKey","modalActive","modalQueue","request","path","options","a","retry","fetch","headers","authorization","then","v","handleResponse","response","ok","status","Promise","resolve","reject","catch","modal","document","getElementById","form","backdrop","HTMLElement","HTMLFormElement","HTMLInputElement","body","classList","add","style","display","addEventListener","callback","preventDefault","removeEventListener","remove","forEach","cb","json","error","String","Error","createTorrent","link","method","getSteamUrl","file","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","PlayComponent","torrent","setTorrent","setError","useLocation","searchParams","URLSearchParams","search","get","useEffect","action","err","role","to","arr","key","order","sorted","sort","b","doCompare","keyA","keyB","Array","res","map","filter","length","Object","values","stringA","toLowerCase","stringB","reverse","sortBy","files","split","part","index","width","controls","src","type","DashboardComponent","torrents","setTorrents","usage","setUsage","updateTorrents","getTorrents","updateUsage","getUsage","torrentsInterval","usageInterval","setInterval","clearInterval","totalDiskSpace","freeDiskSpace","usedTorrentSpace","downloaded","downloadSpeed","format","started","ContentComponent","href","rel","component","exact","isLocalhost","Boolean","hostname","match","register","config","navigator","URL","process","origin","swUrl","contentType","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","div","createElement","position","bottom","left","right","zIndex","textAlign","background","padding","innerHTML","appendChild","ReactDOM","render"],"mappings":"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","file":"static/js/main.6f7e4f76.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nexport function HomeComponent(): JSX.Element {\n    const [input, setInput] = useState('')\n    const history = useHistory()\n\n    return <div className=\"container\">\n        <h2 className=\"mt-5\">Create video stream</h2>\n        <div className=\"form-group\">\n            <input className=\"form-control\" name=\"link\" placeholder=\"Torrent file or magnet link\" value={input} onChange={event => {\n                setInput(event.target.value)\n            }}/>\n        </div>\n        <button className=\"btn btn-outline-primary\" onClick={() => {\n            if (input.trim()) {\n                history.push(`/play?torrent=${encodeURIComponent(input)}`)\n            }\n        }}>Load video</button>\n    </div>\n}\n","export interface TorrentMeta {\n    link: string\n    infoHash: string\n    name: string\n    started: number\n    updated: number\n    files: {\n        name: string\n        path: string\n        length: number\n    }[]\n    downloaded: number\n    downloadSpeed: number\n}\n\nexport interface Usage {\n    totalDiskSpace: number,\n    freeDiskSpace: number,\n    usedTorrentSpace: number,\n}\n\nconst apiDomain = process.env.NODE_ENV === 'production' ? `${window.location.protocol}//${window.location.host}` : 'http://127.0.0.1:3000' \nconst streamUrl = `${apiDomain}/stream`\n\nlet apiKey = ''\nlet modalActive = false\nconst modalQueue: Array<() => void> = []\n\nasync function request(path: string, options?: RequestInit): Promise<Response> {\n    const retry = () => {\n        return fetch(`${apiDomain}/${path}`, {\n            ...(apiKey ? {\n                headers: {\n                    authorization: `bearer ${apiKey}`,\n                    ...(options || {}).headers\n                }\n            } : {}),\n            ...options\n        })\n    }\n    return retry().then(v => handleResponse(v, retry))\n}\n\nasync function handleResponse(response: Response, retry: () => Promise<Response>): Promise<Response> {\n    if (!response.ok) {\n        if (response.status === 403) {\n            if (modalActive) {\n                return new Promise((resolve, reject) => {\n                    modalQueue.push(() => {\n                        retry().then(v => resolve(handleResponse(v, retry))).catch(reject)\n                    })\n                })\n            } else {\n                modalActive = true\n                return new Promise((resolve, reject) => {\n                    const modal = document.getElementById('authorization_modal')\n                    const form = document.getElementById('authorization_form')\n                    const input = document.getElementById('authorization_input')\n                    const backdrop = document.getElementById('backdrop') \n                    if (modal instanceof HTMLElement && form instanceof HTMLFormElement && input instanceof HTMLInputElement && backdrop) {\n                        document.body.classList.add('modal-open')\n                        modal.style.display = 'block'\n                        backdrop.style.display = 'block'\n\n                        const callback = (event: Event) => {\n                            event.preventDefault()\n                            if (input.value) {\n                                apiKey = input.value\n                                form.removeEventListener('submit', callback)\n                                document.body.classList.remove('modal-open')\n                                modal.style.display = ''\n                                backdrop.style.display = 'none'\n                                modalActive = false\n                                retry().then(async v => {\n                                    resolve(handleResponse(v, retry))\n                                    modalQueue.forEach(cb => {\n                                        cb()\n                                    })\n                                }).catch(reject)\n                            }\n                        }\n\n                        form.addEventListener('submit', callback)\n                    }\n                    // resolve(retry())\n                })\n            }\n        }\n        let error: string\n        try {\n            error = (await response.json()).error\n        } catch (err) {\n            error = String(err)\n        }\n        throw Error(error) || 'Bad response'\n    }\n    return response\n}\n\n\nexport async function createTorrent({ link }: { link: string }): Promise<TorrentMeta> {\n    return request(`api/torrents?torrent=${link}`, {\n        method: 'POST'\n    }).then(v => v.json())\n}\n\nexport async function getTorrents(): Promise<TorrentMeta[]> {\n    return request(`api/torrents`).then(v => v.json())\n}\n\nexport function getSteamUrl(link: string, file: string): string {\n    return `${streamUrl}?torrent=${encodeURIComponent(link)}&file=${encodeURIComponent(file)}`\n}\n\nexport async function getUsage(): Promise<Usage> {\n    return request(`api/usage`).then(v => v.json())\n}\n","export function formatBytes(bytes: number, decimals: number = 2): string {\n    if (bytes === 0) return '0 Bytes'\n\n    const k = 1024\n    const dm = decimals < 0 ? 0 : decimals\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i]\n}\n\nexport function sortBy<T>(arr: T[], key: (item: T) => unknown = v => v, order: 'asc' | 'desc' = 'asc'): T[] {\n    const sorted = [...arr].sort((a, b) => {\n        const doCompare = (keyA: unknown, keyB: unknown): number => {\n            if (typeof keyA === 'number' && typeof keyB === 'number') {\n                return keyA < keyB ? -1 : keyA > keyB ? 1 : 0\n            }\n\n            if (keyA instanceof Array && keyB instanceof Array) {\n                const res = keyA.map((v, i) => doCompare(v, keyB[i])).filter(v => v !== 0)\n                return res.length ? res[0] : 1\n            }\n\n            if (typeof keyA === 'object' && typeof keyB === 'object') {\n                return doCompare(Object.values(keyA ?? {})[0], Object.values(keyB ?? {})[0])\n            }\n\n            const stringA = String(keyA).toLowerCase()\n            const stringB = String(keyB).toLowerCase()\n\n            return stringA < stringB ? -1 : stringA > stringB ? 1 : 0\n        }\n\n        return doCompare(key(a), key(b))\n    })\n    return order === 'desc' ? sorted.reverse() : sorted\n}\n","import React, { useEffect, useState } from 'react'\nimport { useLocation, Link } from 'react-router-dom'\n\nimport { TorrentMeta, createTorrent, getSteamUrl } from '../helpers/client'\nimport { formatBytes, sortBy } from '../helpers'\n\nexport function PlayComponent(): JSX.Element {\n    const [torrent, setTorrent] = useState<TorrentMeta>()\n    const [error, setError] = useState('')\n    const location = useLocation()\n\n    const searchParams = new URLSearchParams(location.search)\n    const link = searchParams.get('torrent')\n    const file = searchParams.get('file')\n\n    useEffect(() => {\n        const action = async () => {\n            if (link) {\n                setTorrent(await createTorrent({ link }))\n            } else {\n                setError('Torrent link is not specified')\n            }\n        }\n        action().catch(err => {\n            setError(String(err))\n        })\n    }, [link])\n\n    return <div className=\"container\">\n        {error && <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n        </div>}\n        {!torrent && !error && <div className=\"text-center\">\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>}\n        {torrent && link && <>\n            <h3><small>{torrent.name}</small></h3>\n            {!file ? <table className=\"table\">\n                <thead>\n                    <tr>\n                        <th>File</th>\n                        <th>Size</th>\n                        <th>Play</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {sortBy(torrent.files, v => v.name).map(v => <tr>\n                        <td>\n                            {v.path.split('/').map((part, index, arr) => index + 1 < arr.length ? <span className='text-muted'>{part} / </span>: part)}\n                        </td>\n                        <td>\n                            {formatBytes(v.length)}\n                        </td>\n                        <td>\n                            <Link to={`?torrent=${encodeURIComponent(link)}&file=${encodeURIComponent(v.path)}`} className=\"btn btn-outline-primary ti-control-play\"></Link>\n                        </td>\n                    </tr>)}\n                </tbody>\n            </table> : <>\n                <h5 className=\"text-muted\"><small>{file}</small> - <Link to={`?torrent=${encodeURIComponent(link)}`}>view all</Link></h5>\n            </>}\n            {file && link && <>\n                <div className=\"embed-responsive embed-responsive-16by9\">\n                    <video width=\"720\" controls>\n                        <source src={getSteamUrl(link, file)} type=\"video/mp4\" />\n                        Your browser does not support HTML5 video.\n                    </video>\n                </div>\n                <br />\n                <div className=\"form-group\">\n                    <input className=\"form-control\" value={getSteamUrl(link, file)} />\n                </div>\n            </>}\n        </>}\n    </div>\n}","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'timeago.js'\n\nimport { TorrentMeta, getTorrents, getUsage, Usage } from '../helpers/client'\nimport { formatBytes } from '../helpers'\n\nexport function DashboardComponent(): JSX.Element {\n    const [torrents, setTorrents] = useState<TorrentMeta[]>()\n    const [usage, setUsage] = useState<Usage>()\n    const [error, setError] = useState('')\n\n    const updateTorrents = () => getTorrents().then(v => setTorrents(v)).catch(err => {\n        setError(String(err))\n    })\n    const updateUsage = () => getUsage().then(v => setUsage(v)).catch(err => {\n        setError(String(err))\n    })\n\n    useEffect(() => {\n        let torrentsInterval: NodeJS.Timeout\n        let usageInterval: NodeJS.Timeout\n\n        updateTorrents().then(() => {\n            torrentsInterval = setInterval(() => {\n                updateTorrents()\n            }, 5 * 1000)\n        })\n        updateUsage().then(() => {\n            usageInterval = setInterval(() => {\n                updateTorrents()\n            }, 60 * 1000)\n        })\n\n        return () => {\n            clearInterval(torrentsInterval)\n            clearInterval(usageInterval)\n        }\n    }, [])\n\n    return <div className=\"container\">\n        {error && <div className=\"alert alert-danger\" role=\"alert\">\n            {error}\n        </div>}\n        {!torrents && !error && <div className=\"text-center\">\n            <div className=\"spinner-border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </div>\n        </div>}\n        {usage && <div className=\"card-deck mb-3 text-center\">\n            <div className=\"card mb-4 box-shadow\">\n                <div className=\"card-header\">\n                    <h4 className=\"my-0 font-weight-normal\">Disk space</h4>\n                </div>\n                <div className=\"card-body\">\n                    <h2 className=\"card-title pricing-card-title\">\n                        {formatBytes(usage.totalDiskSpace - usage.freeDiskSpace)}\n                        <small className=\"text-muted\">/ {formatBytes(usage.totalDiskSpace)}</small>\n                    </h2>\n                    <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{\n                            width: `${((usage.totalDiskSpace - usage.freeDiskSpace) / usage.totalDiskSpace * 100)}%`\n                        }}></div>\n                    </div>\n                </div>\n            </div>\n            <div className=\"card mb-4 box-shadow\">\n                <div className=\"card-header\">\n                    <h4 className=\"my-0 font-weight-normal\">Torrents space</h4>\n                </div>\n                <div className=\"card-body\">\n                    <h2 className=\"card-title pricing-card-title\">\n                        {formatBytes(usage.usedTorrentSpace)}\n                        <small className=\"text-muted\">/ {formatBytes(usage.freeDiskSpace + usage.usedTorrentSpace)}</small>\n                    </h2>\n                    <div className=\"progress\">\n                        <div className=\"progress-bar\" role=\"progressbar\" style={{\n                            width: `${usage.usedTorrentSpace / (usage.freeDiskSpace + usage.usedTorrentSpace) * 100}%`\n                        }}></div>\n                    </div>\n                </div>\n            </div>\n        </div>}\n        {torrents && <>\n            {torrents.length ? <>\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Name</th>\n                            <th>Download</th>\n                            <th>Created</th>\n                            <th>Play</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {torrents.map(torrent => <>\n                            <tr>\n                                <td>{torrent.name}</td>\n                                <td>{formatBytes(torrent.downloaded)} ({formatBytes(torrent.downloadSpeed)}/s)</td>\n                                <td>{format(torrent.started)}</td>\n                                <td><Link to={`/play?torrent=${encodeURIComponent(torrent.link)}`} className=\"btn btn-outline-primary ti-control-play\"></Link></td>\n                            </tr>\n                        </>)}\n                    </tbody>\n                </table>\n            </> : <div className=\"alert alert-warning\" role=\"alert\">\n                No active torrents at the moment\n            </div>}\n        </>}\n    </div>\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Switch, Route } from 'react-router'\n\nimport { HomeComponent } from './home'\nimport { PlayComponent } from './play'\nimport { DashboardComponent } from './dashboard'\n\nexport function ContentComponent(): JSX.Element {\n    return <div>\n            <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\"><Link className='text-decoration-none text-dark' to='/'>Torrent Stream Server</Link></h5>\n            <nav className=\"my-2 my-md-0 mr-md-3\">\n                <Link className=\"p-2 text-dark\" to=\"/\">Home</Link>\n                <Link className=\"p-2 text-dark\" to=\"/dashboard\">Dashboard</Link>\n            </nav>\n                <a className=\"btn btn-outline-primary\" href=\"https://github.com/KiraLT/torrent-stream-server\" target=\"_blank\" rel=\"noopener noreferrer\">Find on GitHub</a>\n            </div>\n\n            <Switch>\n                <Route path=\"/\" component={HomeComponent} exact />\n                <Route path=\"/play\" component={PlayComponent} exact />\n                <Route path=\"/dashboard\" component={DashboardComponent} exact />\n            </Switch>\n    </div>\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport { ContentComponent } from './components/content'\nimport { register } from './serviceWorker'\n\nexport function initApp(target: HTMLElement | null): void {\n    registerWebworker()\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <ContentComponent />\n        </BrowserRouter>,\n        target\n    )\n}\n\nfunction registerWebworker(): void {\n    register({\n        onUpdate: () => {\n            const div = document.createElement('div')\n            div.style.position = 'fixed'\n            div.style.bottom = '0'\n            div.style.left = '0'\n            div.style.right = '0'\n            div.style.zIndex = '9999'\n            div.style.textAlign = 'center'\n            div.style.background = 'rgba(208, 208, 208, 0.90)'\n            div.style.padding = '2px'\n            div.className = 'text-secondary'\n            div.innerHTML = `\n                New content is available and will be used when all tabs for this page are closed\n                <button class=\"btn btn-link\" onClick=\"this.parentNode.style.display = 'none'\">\n                    x\n                </button>`\n            document.body.appendChild(div)\n        }\n    })\n}\n","import { initApp } from './app'\n\ninitApp(document.getElementById('root'))\n"],"sourceRoot":""}