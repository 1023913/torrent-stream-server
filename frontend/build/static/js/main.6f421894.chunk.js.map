{"version":3,"sources":["helpers/client/runtime.ts","helpers/client/models/ProviderFeature.ts","helpers/client/models/Provider.ts","helpers/client/models/ProviderCategory.ts","helpers/client/models/ProviderCategorySubcategories.ts","helpers/client/models/ProviderTorrent.ts","helpers/client/models/Success.ts","helpers/client/models/Torrent.ts","helpers/client/models/TorrentFile.ts","helpers/client/models/Usage.ts","helpers/client/apis/AuthApi.ts","helpers/client/apis/BrowseApi.ts","helpers/client/apis/DashboardApi.ts","helpers/client/apis/TorrentsApi.ts","config.ts","helpers/history.ts","components/parts/auth.tsx","components/home.tsx","helpers/index.ts","components/play.tsx","helpers/hooks.ts","components/browse.tsx","components/dashboard.tsx","components/content.tsx","serviceWorker.ts","app.tsx","index.tsx"],"names":["BASE_PATH","replace","BaseAPI","configuration","Configuration","middleware","fetchApi","url","init","a","fetchParams","pre","fetch","response","post","clone","this","next","concat","preMiddlewares","middlewares","map","withMiddleware","postMiddlewares","context","createFetchParams","status","basePath","path","undefined","query","Object","keys","length","queryParamsStringify","value","body","FormData","URLSearchParams","Blob","JSON","stringify","headers","assign","method","credentials","constructor","slice","RequiredError","field","msg","name","Error","window","bind","querystring","username","password","apiKey","accessToken","exists","json","key","params","prefix","fullKey","Array","multiValue","singleValue","encodeURIComponent","String","join","filter","part","ProviderFeature","JSONApiResponse","raw","transformer","jsonValue","ProviderFromJSON","ignoreDiscriminator","categories","ProviderCategoryFromJSON","features","ProviderFeatureFromJSON","ProviderFromJSONTyped","id","subcategories","ProviderCategorySubcategoriesFromJSON","ProviderCategoryFromJSONTyped","ProviderCategorySubcategoriesFromJSONTyped","ProviderFeatureFromJSONTyped","ProviderTorrentFromJSON","magnet","seeds","downloads","peers","size","time","link","isVip","imdb","numFiles","category","ProviderTorrentFromJSONTyped","SuccessFromJSON","success","SuccessFromJSONTyped","TorrentFromJSON","infoHash","started","updated","files","TorrentFileFromJSON","downloaded","downloadSpeed","TorrentFromJSONTyped","type","stream","TorrentFileFromJSONTyped","UsageFromJSON","totalDiskSpace","freeDiskSpace","usedTorrentSpace","UsageFromJSONTyped","AuthApi","queryParameters","headerParameters","token","tokenString","request","runtime","authRaw","BrowseApi","getProvidersRaw","requestParameters","provider","searchTorrentsRaw","DashboardApi","getUsageRaw","TorrentsApi","torrent","createTorrentRaw","getTorrentRaw","getTorrentsRaw","apiDomain","location","protocol","host","getApiConfig","options","bearer","defaultState","addHistoryItem","items","getHistoryItems","localStorage","setItem","v","str","getItem","parse","withBearer","Component","props","useGlobal","bearerRequired","setBearerRequired","setBearer","useState","error","setError","useEffect","auth","then","catch","err","Response","className","role","Container","Alert","variant","Form","onSubmit","event","preventDefault","target","get","Row","Col","Control","placeholder","Button","HomeComponent","input","setInput","historyItems","setHistoryItems","history","useHistory","onChange","onClick","trim","push","item","style","whiteSpace","to","removeHistoryItem","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","parseError","data","statusText","PlayComponent","setTorrent","useLocation","searchParams","search","file","torrentFile","find","createTorrent","newTorrent","action","href","arr","order","sorted","sort","b","doCompare","keyA","keyB","res","values","stringA","toLowerCase","stringB","reverse","sortBy","split","index","TorrentFileComponent","includes","VideoPlayerComponent","video","ImageComponent","image","TextComponent","text","src","alt","setValue","maxHeight","width","controls","useSearchParam","useContext","__RouterContext","useMemo","BrowseComponent","loading","setLoading","providers","setProviders","torrents","setTorrents","handler","args","delete","forEach","set","entries","toString","useSearchParamsHandler","getProviders","doAction","canSearch","searchTorrents","providerNames","formQuery","sm","FormControl","as","disabled","vi","label","s","si","InputGroup","defaultValue","Append","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","cx","cy","r","x1","y1","x2","y2","Table","ti","rel","Badge","pill","cursor","format","Date","DashboardComponent","usage","setUsage","updateTorrents","getTorrents","updateUsage","getUsage","torrentsInterval","usageInterval","setInterval","clearInterval","ContentComponent","component","exact","isLocalhost","Boolean","hostname","match","register","config","navigator","URL","process","origin","addEventListener","swUrl","contentType","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","document","getElementById","setGlobal","div","createElement","position","bottom","left","right","zIndex","textAlign","background","padding","innerHTML","appendChild","ReactDOM","render"],"mappings":"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","file":"static/js/main.6f421894.chunk.js","sourcesContent":["/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nexport const BASE_PATH = 'http://127.0.0.1:3000'.replace(/\\/+$/, '')\n\nconst isBlob = (value: any) => typeof Blob !== 'undefined' && value instanceof Blob\n\n/**\n * This is the base class for all generated API classes.\n */\nexport class BaseAPI {\n    private middleware: Middleware[]\n\n    constructor(protected configuration = new Configuration()) {\n        this.middleware = configuration.middleware\n    }\n\n    withMiddleware<T extends BaseAPI>(this: T, ...middlewares: Middleware[]) {\n        const next = this.clone<T>()\n        next.middleware = next.middleware.concat(...middlewares)\n        return next\n    }\n\n    withPreMiddleware<T extends BaseAPI>(this: T, ...preMiddlewares: Array<Middleware['pre']>) {\n        const middlewares = preMiddlewares.map((pre) => ({ pre }))\n        return this.withMiddleware<T>(...middlewares)\n    }\n\n    withPostMiddleware<T extends BaseAPI>(this: T, ...postMiddlewares: Array<Middleware['post']>) {\n        const middlewares = postMiddlewares.map((post) => ({ post }))\n        return this.withMiddleware<T>(...middlewares)\n    }\n\n    protected async request(context: RequestOpts): Promise<Response> {\n        const { url, init } = this.createFetchParams(context)\n        const response = await this.fetchApi(url, init)\n        if (response.status >= 200 && response.status < 300) {\n            return response\n        }\n        throw response\n    }\n\n    private createFetchParams(context: RequestOpts) {\n        let url = this.configuration.basePath + context.path\n        if (context.query !== undefined && Object.keys(context.query).length !== 0) {\n            // only add the querystring to the URL if there are query parameters.\n            // this is done to avoid urls ending with a \"?\" character which buggy webservers\n            // do not handle correctly sometimes.\n            url += '?' + this.configuration.queryParamsStringify(context.query)\n        }\n        const body =\n            (typeof FormData !== 'undefined' && context.body instanceof FormData) ||\n            context.body instanceof URLSearchParams ||\n            isBlob(context.body)\n                ? context.body\n                : JSON.stringify(context.body)\n\n        const headers = Object.assign({}, this.configuration.headers, context.headers)\n        const init = {\n            method: context.method,\n            headers: headers,\n            body,\n            credentials: this.configuration.credentials,\n        }\n        return { url, init }\n    }\n\n    private fetchApi = async (url: string, init: RequestInit) => {\n        let fetchParams = { url, init }\n        for (const middleware of this.middleware) {\n            if (middleware.pre) {\n                fetchParams =\n                    (await middleware.pre({\n                        fetch: this.fetchApi,\n                        ...fetchParams,\n                    })) || fetchParams\n            }\n        }\n        let response = await this.configuration.fetchApi(fetchParams.url, fetchParams.init)\n        for (const middleware of this.middleware) {\n            if (middleware.post) {\n                response =\n                    (await middleware.post({\n                        fetch: this.fetchApi,\n                        url,\n                        init,\n                        response: response.clone(),\n                    })) || response\n            }\n        }\n        return response\n    }\n\n    /**\n     * Create a shallow clone of `this` by constructing a new instance\n     * and then shallow cloning data members.\n     */\n    private clone<T extends BaseAPI>(this: T): T {\n        const constructor = this.constructor as any\n        const next = new constructor(this.configuration)\n        next.middleware = this.middleware.slice()\n        return next\n    }\n}\n\nexport class RequiredError extends Error {\n    name: 'RequiredError' = 'RequiredError'\n    constructor(public field: string, msg?: string) {\n        super(msg)\n    }\n}\n\nexport const COLLECTION_FORMATS = {\n    csv: ',',\n    ssv: ' ',\n    tsv: '\\t',\n    pipes: '|',\n}\n\nexport type FetchAPI = GlobalFetch['fetch']\n\nexport interface ConfigurationParameters {\n    basePath?: string // override base path\n    fetchApi?: FetchAPI // override for fetch implementation\n    middleware?: Middleware[] // middleware to apply before/after fetch requests\n    queryParamsStringify?: (params: HTTPQuery) => string // stringify function for query strings\n    username?: string // parameter for basic security\n    password?: string // parameter for basic security\n    apiKey?: string | ((name: string) => string) // parameter for apiKey security\n    accessToken?: string | ((name?: string, scopes?: string[]) => string) // parameter for oauth2 security\n    headers?: HTTPHeaders //header params we want to use on every request\n    credentials?: RequestCredentials //value for the credentials param we want to use on each request\n}\n\nexport class Configuration {\n    constructor(private configuration: ConfigurationParameters = {}) {}\n\n    get basePath(): string {\n        return this.configuration.basePath != null ? this.configuration.basePath : BASE_PATH\n    }\n\n    get fetchApi(): FetchAPI {\n        return this.configuration.fetchApi || window.fetch.bind(window)\n    }\n\n    get middleware(): Middleware[] {\n        return this.configuration.middleware || []\n    }\n\n    get queryParamsStringify(): (params: HTTPQuery) => string {\n        return this.configuration.queryParamsStringify || querystring\n    }\n\n    get username(): string | undefined {\n        return this.configuration.username\n    }\n\n    get password(): string | undefined {\n        return this.configuration.password\n    }\n\n    get apiKey(): ((name: string) => string) | undefined {\n        const apiKey = this.configuration.apiKey\n        if (apiKey) {\n            return typeof apiKey === 'function' ? apiKey : () => apiKey\n        }\n        return undefined\n    }\n\n    get accessToken(): ((name: string, scopes?: string[]) => string) | undefined {\n        const accessToken = this.configuration.accessToken\n        if (accessToken) {\n            return typeof accessToken === 'function' ? accessToken : () => accessToken\n        }\n        return undefined\n    }\n\n    get headers(): HTTPHeaders | undefined {\n        return this.configuration.headers\n    }\n\n    get credentials(): RequestCredentials | undefined {\n        return this.configuration.credentials\n    }\n}\n\nexport type Json = any\nexport type HTTPMethod = 'GET' | 'POST' | 'PUT' | 'PATCH' | 'DELETE' | 'OPTIONS' | 'HEAD'\nexport type HTTPHeaders = { [key: string]: string }\nexport type HTTPQuery = {\n    [key: string]:\n        | string\n        | number\n        | null\n        | boolean\n        | Array<string | number | null | boolean>\n        | HTTPQuery\n}\nexport type HTTPBody = Json | FormData | URLSearchParams\nexport type ModelPropertyNaming = 'camelCase' | 'snake_case' | 'PascalCase' | 'original'\n\nexport interface FetchParams {\n    url: string\n    init: RequestInit\n}\n\nexport interface RequestOpts {\n    path: string\n    method: HTTPMethod\n    headers: HTTPHeaders\n    query?: HTTPQuery\n    body?: HTTPBody\n}\n\nexport function exists(json: any, key: string) {\n    const value = json[key]\n    return value !== null && value !== undefined\n}\n\nexport function querystring(params: HTTPQuery, prefix: string = ''): string {\n    return Object.keys(params)\n        .map((key) => {\n            const fullKey = prefix + (prefix.length ? `[${key}]` : key)\n            const value = params[key]\n            if (value instanceof Array) {\n                const multiValue = value\n                    .map((singleValue) => encodeURIComponent(String(singleValue)))\n                    .join(`&${encodeURIComponent(fullKey)}=`)\n                return `${encodeURIComponent(fullKey)}=${multiValue}`\n            }\n            if (value instanceof Object) {\n                return querystring(value as HTTPQuery, fullKey)\n            }\n            return `${encodeURIComponent(fullKey)}=${encodeURIComponent(String(value))}`\n        })\n        .filter((part) => part.length > 0)\n        .join('&')\n}\n\nexport function mapValues(data: any, fn: (item: any) => any) {\n    return Object.keys(data).reduce((acc, key) => ({ ...acc, [key]: fn(data[key]) }), {})\n}\n\nexport function canConsumeForm(consumes: Consume[]): boolean {\n    for (const consume of consumes) {\n        if ('multipart/form-data' === consume.contentType) {\n            return true\n        }\n    }\n    return false\n}\n\nexport interface Consume {\n    contentType: string\n}\n\nexport interface RequestContext {\n    fetch: FetchAPI\n    url: string\n    init: RequestInit\n}\n\nexport interface ResponseContext {\n    fetch: FetchAPI\n    url: string\n    init: RequestInit\n    response: Response\n}\n\nexport interface Middleware {\n    pre?(context: RequestContext): Promise<FetchParams | void>\n    post?(context: ResponseContext): Promise<Response | void>\n}\n\nexport interface ApiResponse<T> {\n    raw: Response\n    value(): Promise<T>\n}\n\nexport interface ResponseTransformer<T> {\n    (json: any): T\n}\n\nexport class JSONApiResponse<T> {\n    constructor(\n        public raw: Response,\n        private transformer: ResponseTransformer<T> = (jsonValue: any) => jsonValue\n    ) {}\n\n    async value(): Promise<T> {\n        return this.transformer(await this.raw.json())\n    }\n}\n\nexport class VoidApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<void> {\n        return undefined\n    }\n}\n\nexport class BlobApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<Blob> {\n        return await this.raw.blob()\n    }\n}\n\nexport class TextApiResponse {\n    constructor(public raw: Response) {}\n\n    async value(): Promise<string> {\n        return await this.raw.text()\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\n/**\n *\n * @export\n * @enum {string}\n */\nexport enum ProviderFeature {\n    Search = 'search',\n}\n\nexport function ProviderFeatureFromJSON(json: any): ProviderFeature {\n    return ProviderFeatureFromJSONTyped(json, false)\n}\n\nexport function ProviderFeatureFromJSONTyped(\n    json: any,\n    ignoreDiscriminator: boolean\n): ProviderFeature {\n    return json as ProviderFeature\n}\n\nexport function ProviderFeatureToJSON(value?: ProviderFeature | null): any {\n    return value as any\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\nimport {\n    ProviderCategory,\n    ProviderCategoryFromJSON,\n    ProviderCategoryFromJSONTyped,\n    ProviderCategoryToJSON,\n    ProviderFeature,\n    ProviderFeatureFromJSON,\n    ProviderFeatureFromJSONTyped,\n    ProviderFeatureToJSON,\n} from './'\n\n/**\n *\n * @export\n * @interface Provider\n */\nexport interface Provider {\n    /**\n     *\n     * @type {string}\n     * @memberof Provider\n     */\n    name: string\n    /**\n     *\n     * @type {Array<ProviderCategory>}\n     * @memberof Provider\n     */\n    categories: Array<ProviderCategory>\n    /**\n     *\n     * @type {Array<ProviderFeature>}\n     * @memberof Provider\n     */\n    features: Array<ProviderFeature>\n}\n\nexport function ProviderFromJSON(json: any): Provider {\n    return ProviderFromJSONTyped(json, false)\n}\n\nexport function ProviderFromJSONTyped(json: any, ignoreDiscriminator: boolean): Provider {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        name: json['name'],\n        categories: (json['categories'] as Array<any>).map(ProviderCategoryFromJSON),\n        features: (json['features'] as Array<any>).map(ProviderFeatureFromJSON),\n    }\n}\n\nexport function ProviderToJSON(value?: Provider | null): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        name: value.name,\n        categories: (value.categories as Array<any>).map(ProviderCategoryToJSON),\n        features: (value.features as Array<any>).map(ProviderFeatureToJSON),\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\nimport {\n    ProviderCategorySubcategories,\n    ProviderCategorySubcategoriesFromJSON,\n    ProviderCategorySubcategoriesFromJSONTyped,\n    ProviderCategorySubcategoriesToJSON,\n} from './'\n\n/**\n *\n * @export\n * @interface ProviderCategory\n */\nexport interface ProviderCategory {\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderCategory\n     */\n    name: string\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderCategory\n     */\n    id: string\n    /**\n     *\n     * @type {Array<ProviderCategorySubcategories>}\n     * @memberof ProviderCategory\n     */\n    subcategories: Array<ProviderCategorySubcategories>\n}\n\nexport function ProviderCategoryFromJSON(json: any): ProviderCategory {\n    return ProviderCategoryFromJSONTyped(json, false)\n}\n\nexport function ProviderCategoryFromJSONTyped(\n    json: any,\n    ignoreDiscriminator: boolean\n): ProviderCategory {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        name: json['name'],\n        id: json['id'],\n        subcategories: (json['subcategories'] as Array<any>).map(\n            ProviderCategorySubcategoriesFromJSON\n        ),\n    }\n}\n\nexport function ProviderCategoryToJSON(value?: ProviderCategory | null): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        name: value.name,\n        id: value.id,\n        subcategories: (value.subcategories as Array<any>).map(ProviderCategorySubcategoriesToJSON),\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\n/**\n *\n * @export\n * @interface ProviderCategorySubcategories\n */\nexport interface ProviderCategorySubcategories {\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderCategorySubcategories\n     */\n    name: string\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderCategorySubcategories\n     */\n    id: string\n}\n\nexport function ProviderCategorySubcategoriesFromJSON(json: any): ProviderCategorySubcategories {\n    return ProviderCategorySubcategoriesFromJSONTyped(json, false)\n}\n\nexport function ProviderCategorySubcategoriesFromJSONTyped(\n    json: any,\n    ignoreDiscriminator: boolean\n): ProviderCategorySubcategories {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        name: json['name'],\n        id: json['id'],\n    }\n}\n\nexport function ProviderCategorySubcategoriesToJSON(\n    value?: ProviderCategorySubcategories | null\n): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        name: value.name,\n        id: value.id,\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\nimport {\n    ProviderCategorySubcategories,\n    ProviderCategorySubcategoriesFromJSON,\n    ProviderCategorySubcategoriesFromJSONTyped,\n    ProviderCategorySubcategoriesToJSON,\n} from './'\n\n/**\n *\n * @export\n * @interface ProviderTorrent\n */\nexport interface ProviderTorrent {\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderTorrent\n     */\n    name: string\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderTorrent\n     */\n    magnet: string\n    /**\n     *\n     * @type {number}\n     * @memberof ProviderTorrent\n     */\n    seeds: number\n    /**\n     *\n     * @type {number}\n     * @memberof ProviderTorrent\n     */\n    downloads?: number\n    /**\n     *\n     * @type {number}\n     * @memberof ProviderTorrent\n     */\n    peers: number\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderTorrent\n     */\n    size: string\n    /**\n     *\n     * @type {number}\n     * @memberof ProviderTorrent\n     */\n    time?: number\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderTorrent\n     */\n    link: string\n    /**\n     *\n     * @type {boolean}\n     * @memberof ProviderTorrent\n     */\n    isVip?: boolean\n    /**\n     *\n     * @type {string}\n     * @memberof ProviderTorrent\n     */\n    imdb?: string\n    /**\n     *\n     * @type {number}\n     * @memberof ProviderTorrent\n     */\n    numFiles?: number\n    /**\n     *\n     * @type {ProviderCategorySubcategories}\n     * @memberof ProviderTorrent\n     */\n    category: ProviderCategorySubcategories\n}\n\nexport function ProviderTorrentFromJSON(json: any): ProviderTorrent {\n    return ProviderTorrentFromJSONTyped(json, false)\n}\n\nexport function ProviderTorrentFromJSONTyped(\n    json: any,\n    ignoreDiscriminator: boolean\n): ProviderTorrent {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        name: json['name'],\n        magnet: json['magnet'],\n        seeds: json['seeds'],\n        downloads: !exists(json, 'downloads') ? undefined : json['downloads'],\n        peers: json['peers'],\n        size: json['size'],\n        time: !exists(json, 'time') ? undefined : json['time'],\n        link: json['link'],\n        isVip: !exists(json, 'isVip') ? undefined : json['isVip'],\n        imdb: !exists(json, 'imdb') ? undefined : json['imdb'],\n        numFiles: !exists(json, 'numFiles') ? undefined : json['numFiles'],\n        category: ProviderCategorySubcategoriesFromJSON(json['category']),\n    }\n}\n\nexport function ProviderTorrentToJSON(value?: ProviderTorrent | null): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        name: value.name,\n        magnet: value.magnet,\n        seeds: value.seeds,\n        downloads: value.downloads,\n        peers: value.peers,\n        size: value.size,\n        time: value.time,\n        link: value.link,\n        isVip: value.isVip,\n        imdb: value.imdb,\n        numFiles: value.numFiles,\n        category: ProviderCategorySubcategoriesToJSON(value.category),\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\n/**\n *\n * @export\n * @interface Success\n */\nexport interface Success {\n    /**\n     *\n     * @type {boolean}\n     * @memberof Success\n     */\n    success: boolean\n}\n\nexport function SuccessFromJSON(json: any): Success {\n    return SuccessFromJSONTyped(json, false)\n}\n\nexport function SuccessFromJSONTyped(json: any, ignoreDiscriminator: boolean): Success {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        success: json['success'],\n    }\n}\n\nexport function SuccessToJSON(value?: Success | null): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        success: value.success,\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\nimport { TorrentFile, TorrentFileFromJSON, TorrentFileFromJSONTyped, TorrentFileToJSON } from './'\n\n/**\n *\n * @export\n * @interface Torrent\n */\nexport interface Torrent {\n    /**\n     *\n     * @type {string}\n     * @memberof Torrent\n     */\n    link: string\n    /**\n     *\n     * @type {string}\n     * @memberof Torrent\n     */\n    infoHash: string\n    /**\n     *\n     * @type {string}\n     * @memberof Torrent\n     */\n    name: string\n    /**\n     *\n     * @type {number}\n     * @memberof Torrent\n     */\n    started: number\n    /**\n     *\n     * @type {number}\n     * @memberof Torrent\n     */\n    updated: number\n    /**\n     *\n     * @type {Array<TorrentFile>}\n     * @memberof Torrent\n     */\n    files: Array<TorrentFile>\n    /**\n     *\n     * @type {number}\n     * @memberof Torrent\n     */\n    downloaded: number\n    /**\n     *\n     * @type {number}\n     * @memberof Torrent\n     */\n    downloadSpeed: number\n}\n\nexport function TorrentFromJSON(json: any): Torrent {\n    return TorrentFromJSONTyped(json, false)\n}\n\nexport function TorrentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Torrent {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        link: json['link'],\n        infoHash: json['infoHash'],\n        name: json['name'],\n        started: json['started'],\n        updated: json['updated'],\n        files: (json['files'] as Array<any>).map(TorrentFileFromJSON),\n        downloaded: json['downloaded'],\n        downloadSpeed: json['downloadSpeed'],\n    }\n}\n\nexport function TorrentToJSON(value?: Torrent | null): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        link: value.link,\n        infoHash: value.infoHash,\n        name: value.name,\n        started: value.started,\n        updated: value.updated,\n        files: (value.files as Array<any>).map(TorrentFileToJSON),\n        downloaded: value.downloaded,\n        downloadSpeed: value.downloadSpeed,\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\n/**\n *\n * @export\n * @interface TorrentFile\n */\nexport interface TorrentFile {\n    /**\n     *\n     * @type {string}\n     * @memberof TorrentFile\n     */\n    name: string\n    /**\n     *\n     * @type {string}\n     * @memberof TorrentFile\n     */\n    path: string\n    /**\n     *\n     * @type {string}\n     * @memberof TorrentFile\n     */\n    type: string\n    /**\n     *\n     * @type {number}\n     * @memberof TorrentFile\n     */\n    length: number\n    /**\n     *\n     * @type {string}\n     * @memberof TorrentFile\n     */\n    stream: string\n}\n\nexport function TorrentFileFromJSON(json: any): TorrentFile {\n    return TorrentFileFromJSONTyped(json, false)\n}\n\nexport function TorrentFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): TorrentFile {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        name: json['name'],\n        path: json['path'],\n        type: json['type'],\n        length: json['length'],\n        stream: json['stream'],\n    }\n}\n\nexport function TorrentFileToJSON(value?: TorrentFile | null): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        name: value.name,\n        path: value.path,\n        type: value.type,\n        length: value.length,\n        stream: value.stream,\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport { exists, mapValues } from '../runtime'\n/**\n *\n * @export\n * @interface Usage\n */\nexport interface Usage {\n    /**\n     *\n     * @type {number}\n     * @memberof Usage\n     */\n    totalDiskSpace: number\n    /**\n     *\n     * @type {number}\n     * @memberof Usage\n     */\n    freeDiskSpace: number\n    /**\n     *\n     * @type {number}\n     * @memberof Usage\n     */\n    usedTorrentSpace: number\n}\n\nexport function UsageFromJSON(json: any): Usage {\n    return UsageFromJSONTyped(json, false)\n}\n\nexport function UsageFromJSONTyped(json: any, ignoreDiscriminator: boolean): Usage {\n    if (json === undefined || json === null) {\n        return json\n    }\n    return {\n        totalDiskSpace: json['totalDiskSpace'],\n        freeDiskSpace: json['freeDiskSpace'],\n        usedTorrentSpace: json['usedTorrentSpace'],\n    }\n}\n\nexport function UsageToJSON(value?: Usage | null): any {\n    if (value === undefined) {\n        return undefined\n    }\n    if (value === null) {\n        return null\n    }\n    return {\n        totalDiskSpace: value.totalDiskSpace,\n        freeDiskSpace: value.freeDiskSpace,\n        usedTorrentSpace: value.usedTorrentSpace,\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from '../runtime'\nimport {\n    ApiError,\n    ApiErrorFromJSON,\n    ApiErrorToJSON,\n    Success,\n    SuccessFromJSON,\n    SuccessToJSON,\n} from '../models'\n\n/**\n *\n */\nexport class AuthApi extends runtime.BaseAPI {\n    /**\n     */\n    async authRaw(): Promise<runtime.ApiResponse<Success>> {\n        const queryParameters: runtime.HTTPQuery = {}\n\n        const headerParameters: runtime.HTTPHeaders = {}\n\n        if (this.configuration && this.configuration.accessToken) {\n            const token = this.configuration.accessToken\n            const tokenString = typeof token === 'function' ? token('apiKey', []) : token\n\n            if (tokenString) {\n                headerParameters['Authorization'] = `Bearer ${tokenString}`\n            }\n        }\n        const response = await this.request({\n            path: `/api/auth`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        })\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => SuccessFromJSON(jsonValue))\n    }\n\n    /**\n     */\n    async auth(): Promise<Success> {\n        const response = await this.authRaw()\n        return await response.value()\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from '../runtime'\nimport {\n    ApiError,\n    ApiErrorFromJSON,\n    ApiErrorToJSON,\n    Provider,\n    ProviderFromJSON,\n    ProviderToJSON,\n    ProviderTorrent,\n    ProviderTorrentFromJSON,\n    ProviderTorrentToJSON,\n} from '../models'\n\nexport interface SearchTorrentsRequest {\n    query: string\n    provider: string\n    category?: string\n}\n\n/**\n *\n */\nexport class BrowseApi extends runtime.BaseAPI {\n    /**\n     */\n    async getProvidersRaw(): Promise<runtime.ApiResponse<Array<Provider>>> {\n        const queryParameters: runtime.HTTPQuery = {}\n\n        const headerParameters: runtime.HTTPHeaders = {}\n\n        if (this.configuration && this.configuration.accessToken) {\n            const token = this.configuration.accessToken\n            const tokenString = typeof token === 'function' ? token('apiKey', []) : token\n\n            if (tokenString) {\n                headerParameters['Authorization'] = `Bearer ${tokenString}`\n            }\n        }\n        const response = await this.request({\n            path: `/api/browse/providers`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        })\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ProviderFromJSON))\n    }\n\n    /**\n     */\n    async getProviders(): Promise<Array<Provider>> {\n        const response = await this.getProvidersRaw()\n        return await response.value()\n    }\n\n    /**\n     */\n    async searchTorrentsRaw(\n        requestParameters: SearchTorrentsRequest\n    ): Promise<runtime.ApiResponse<Array<ProviderTorrent>>> {\n        if (requestParameters.query === null || requestParameters.query === undefined) {\n            throw new runtime.RequiredError(\n                'query',\n                'Required parameter requestParameters.query was null or undefined when calling searchTorrents.'\n            )\n        }\n\n        if (requestParameters.provider === null || requestParameters.provider === undefined) {\n            throw new runtime.RequiredError(\n                'provider',\n                'Required parameter requestParameters.provider was null or undefined when calling searchTorrents.'\n            )\n        }\n\n        const queryParameters: runtime.HTTPQuery = {}\n\n        if (requestParameters.query !== undefined) {\n            queryParameters['query'] = requestParameters.query\n        }\n\n        if (requestParameters.provider !== undefined) {\n            queryParameters['provider'] = requestParameters.provider\n        }\n\n        if (requestParameters.category !== undefined) {\n            queryParameters['category'] = requestParameters.category\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {}\n\n        if (this.configuration && this.configuration.accessToken) {\n            const token = this.configuration.accessToken\n            const tokenString = typeof token === 'function' ? token('apiKey', []) : token\n\n            if (tokenString) {\n                headerParameters['Authorization'] = `Bearer ${tokenString}`\n            }\n        }\n        const response = await this.request({\n            path: `/api/browse/search`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        })\n\n        return new runtime.JSONApiResponse(response, (jsonValue) =>\n            jsonValue.map(ProviderTorrentFromJSON)\n        )\n    }\n\n    /**\n     */\n    async searchTorrents(\n        requestParameters: SearchTorrentsRequest\n    ): Promise<Array<ProviderTorrent>> {\n        const response = await this.searchTorrentsRaw(requestParameters)\n        return await response.value()\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from '../runtime'\nimport {\n    ApiError,\n    ApiErrorFromJSON,\n    ApiErrorToJSON,\n    Usage,\n    UsageFromJSON,\n    UsageToJSON,\n} from '../models'\n\n/**\n *\n */\nexport class DashboardApi extends runtime.BaseAPI {\n    /**\n     */\n    async getUsageRaw(): Promise<runtime.ApiResponse<Usage>> {\n        const queryParameters: runtime.HTTPQuery = {}\n\n        const headerParameters: runtime.HTTPHeaders = {}\n\n        if (this.configuration && this.configuration.accessToken) {\n            const token = this.configuration.accessToken\n            const tokenString = typeof token === 'function' ? token('apiKey', []) : token\n\n            if (tokenString) {\n                headerParameters['Authorization'] = `Bearer ${tokenString}`\n            }\n        }\n        const response = await this.request({\n            path: `/api/usage`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        })\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => UsageFromJSON(jsonValue))\n    }\n\n    /**\n     */\n    async getUsage(): Promise<Usage> {\n        const response = await this.getUsageRaw()\n        return await response.value()\n    }\n}\n","/* tslint:disable */\n/* eslint-disable */\n/**\n * Torrents Stream Server\n * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)\n *\n * The version of the OpenAPI document: 1.0\n *\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n\nimport * as runtime from '../runtime'\nimport {\n    ApiError,\n    ApiErrorFromJSON,\n    ApiErrorToJSON,\n    Torrent,\n    TorrentFromJSON,\n    TorrentToJSON,\n} from '../models'\n\nexport interface CreateTorrentRequest {\n    torrent: string\n}\n\nexport interface GetTorrentRequest {\n    infoHash: string\n}\n\n/**\n *\n */\nexport class TorrentsApi extends runtime.BaseAPI {\n    /**\n     */\n    async createTorrentRaw(\n        requestParameters: CreateTorrentRequest\n    ): Promise<runtime.ApiResponse<Torrent>> {\n        if (requestParameters.torrent === null || requestParameters.torrent === undefined) {\n            throw new runtime.RequiredError(\n                'torrent',\n                'Required parameter requestParameters.torrent was null or undefined when calling createTorrent.'\n            )\n        }\n\n        const queryParameters: runtime.HTTPQuery = {}\n\n        if (requestParameters.torrent !== undefined) {\n            queryParameters['torrent'] = requestParameters.torrent\n        }\n\n        const headerParameters: runtime.HTTPHeaders = {}\n\n        if (this.configuration && this.configuration.accessToken) {\n            const token = this.configuration.accessToken\n            const tokenString = typeof token === 'function' ? token('apiKey', []) : token\n\n            if (tokenString) {\n                headerParameters['Authorization'] = `Bearer ${tokenString}`\n            }\n        }\n        const response = await this.request({\n            path: `/api/torrents`,\n            method: 'POST',\n            headers: headerParameters,\n            query: queryParameters,\n        })\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TorrentFromJSON(jsonValue))\n    }\n\n    /**\n     */\n    async createTorrent(requestParameters: CreateTorrentRequest): Promise<Torrent> {\n        const response = await this.createTorrentRaw(requestParameters)\n        return await response.value()\n    }\n\n    /**\n     */\n    async getTorrentRaw(\n        requestParameters: GetTorrentRequest\n    ): Promise<runtime.ApiResponse<Torrent>> {\n        if (requestParameters.infoHash === null || requestParameters.infoHash === undefined) {\n            throw new runtime.RequiredError(\n                'infoHash',\n                'Required parameter requestParameters.infoHash was null or undefined when calling getTorrent.'\n            )\n        }\n\n        const queryParameters: runtime.HTTPQuery = {}\n\n        const headerParameters: runtime.HTTPHeaders = {}\n\n        if (this.configuration && this.configuration.accessToken) {\n            const token = this.configuration.accessToken\n            const tokenString = typeof token === 'function' ? token('apiKey', []) : token\n\n            if (tokenString) {\n                headerParameters['Authorization'] = `Bearer ${tokenString}`\n            }\n        }\n        const response = await this.request({\n            path: `/api/torrents/{infoHash}`.replace(\n                `{${'infoHash'}}`,\n                encodeURIComponent(String(requestParameters.infoHash))\n            ),\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        })\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => TorrentFromJSON(jsonValue))\n    }\n\n    /**\n     */\n    async getTorrent(requestParameters: GetTorrentRequest): Promise<Torrent> {\n        const response = await this.getTorrentRaw(requestParameters)\n        return await response.value()\n    }\n\n    /**\n     */\n    async getTorrentsRaw(): Promise<runtime.ApiResponse<Array<Torrent>>> {\n        const queryParameters: runtime.HTTPQuery = {}\n\n        const headerParameters: runtime.HTTPHeaders = {}\n\n        if (this.configuration && this.configuration.accessToken) {\n            const token = this.configuration.accessToken\n            const tokenString = typeof token === 'function' ? token('apiKey', []) : token\n\n            if (tokenString) {\n                headerParameters['Authorization'] = `Bearer ${tokenString}`\n            }\n        }\n        const response = await this.request({\n            path: `/api/torrents`,\n            method: 'GET',\n            headers: headerParameters,\n            query: queryParameters,\n        })\n\n        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(TorrentFromJSON))\n    }\n\n    /**\n     */\n    async getTorrents(): Promise<Array<Torrent>> {\n        const response = await this.getTorrentsRaw()\n        return await response.value()\n    }\n}\n","import { Configuration } from './helpers/client'\n\nexport const apiDomain =\n    process.env.NODE_ENV === 'production'\n        ? `${window.location.protocol}//${window.location.host}`\n        : 'http://127.0.0.1:3000'\n\nexport function getApiConfig(options?: { bearer?: string }): Configuration {\n    const { bearer } = options || {}\n\n    return new Configuration({\n        basePath: apiDomain,\n        accessToken: bearer,\n    })\n}\n\nexport interface State {\n    bearerRequired?: boolean\n    bearer?: string\n}\n\nexport const defaultState = {}\n","export interface HistoryItem {\n    name: string\n    link: string\n}\n\nexport const historyKey = 'torrentsHistory'\nexport const historyLimit = 10\n\nexport function addHistoryItem(value: HistoryItem): void {\n    const items = getHistoryItems()\n    localStorage.setItem(\n        historyKey,\n        JSON.stringify(\n            [value, ...items.filter((v) => v.link !== value.link)].slice(0, historyLimit)\n        )\n    )\n}\n\nexport function removeHistoryItem(value: HistoryItem): void {\n    const items = getHistoryItems()\n    localStorage.setItem(historyKey, JSON.stringify(items.filter((v) => v.link !== value.link)))\n}\n\nexport function getHistoryItems(): HistoryItem[] {\n    const str = localStorage.getItem(historyKey)\n    try {\n        return str ? JSON.parse(str) : []\n    } catch {\n        return []\n    }\n}\n","import React, { ComponentType, useEffect, useState } from 'react'\nimport { useGlobal } from 'reactn'\nimport { Container, Form, Col, Button, Alert } from 'react-bootstrap'\n\nimport { AuthApi } from '../../helpers/client'\nimport { getApiConfig } from '../../config'\n\nexport function withBearer<T>(Component: ComponentType<T & { bearer?: string }>): ComponentType<T> {\n    return (props) => {\n        const [bearerRequired, setBearerRequired] = useGlobal('bearerRequired')\n        const [bearer, setBearer] = useGlobal('bearer')\n        const [error, setError] = useState('')\n\n        useEffect(() => {\n            if (bearerRequired === undefined) {\n                new AuthApi(getApiConfig())\n                    .auth()\n                    .then(() => {\n                        setBearerRequired(false)\n                    })\n                    .catch((err) => {\n                        if (err instanceof Response && err.status === 401) {\n                            setBearerRequired(true)\n                        } else {\n                            setError('Failed to authorize')\n                        }\n                    })\n            }\n        }, [bearerRequired, setBearerRequired])\n\n        if (bearerRequired === undefined) {\n            return (\n                <div className=\"d-flex justify-content-center mt-5\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )\n        }\n\n        if ((bearerRequired && bearer) || !bearerRequired) {\n            return <Component bearer={bearer} {...props} />\n        }\n\n        return (\n            <Container>\n                <h2 className=\"mt-5\">Authorization</h2>\n                {!!error && (\n                    <Alert variant=\"danger\" className=\"mt-2\">\n                        {error}\n                    </Alert>\n                )}\n                {!error && (\n                    <Alert variant=\"warning\" className=\"mt-2\">\n                        Authorization is required to access this page\n                    </Alert>\n                )}\n                <Form\n                    onSubmit={(event) => {\n                        event.preventDefault()\n                        const value = new FormData(event.target as HTMLFormElement).get('key')\n\n                        if (typeof value === 'string') {\n                            new AuthApi(getApiConfig({ bearer: value }))\n                                .auth()\n                                .then(() => {\n                                    setBearer(value)\n                                })\n                                .catch(() => {\n                                    setError('Failed to authorize')\n                                })\n                        }\n                    }}\n                >\n                    <Form.Row>\n                        <Col>\n                            <Form.Control placeholder=\"Key\" type=\"password\" name=\"key\" />\n                        </Col>\n                        <Col>\n                            <Button type=\"submit\" variant=\"primary\" className=\"w-100\">\n                                Authorize\n                            </Button>\n                        </Col>\n                    </Form.Row>\n                </Form>\n            </Container>\n        )\n    }\n}\n","import React, { useState } from 'react'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport { getHistoryItems, removeHistoryItem } from '../helpers/history'\nimport { withBearer } from './parts/auth'\n\nexport const HomeComponent = withBearer(\n    (): JSX.Element => {\n        const [input, setInput] = useState('')\n        const [historyItems, setHistoryItems] = useState(getHistoryItems())\n        const history = useHistory()\n\n        return (\n            <div className=\"container\">\n                <h2 className=\"mt-5\">Create video stream</h2>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-control\"\n                        name=\"link\"\n                        placeholder=\"Torrent file or magnet link\"\n                        value={input}\n                        onChange={(event) => {\n                            setInput(event.target.value)\n                        }}\n                    />\n                </div>\n                <button\n                    className=\"btn btn-outline-primary\"\n                    onClick={() => {\n                        if (input.trim()) {\n                            history.push(`/play?torrent=${encodeURIComponent(input)}`)\n                        }\n                    }}\n                >\n                    Load video\n                </button>\n                {historyItems.length > 0 && (\n                    <>\n                        <h2 className=\"mt-5\">History</h2>\n                        <table className=\"table\">\n                            <tbody>\n                                {historyItems.map((item) => (\n                                    <>\n                                        <tr>\n                                            <td>{item.name}</td>\n                                            <td style={{ whiteSpace: 'nowrap' }}>\n                                                <Link\n                                                    to={`/play?torrent=${encodeURIComponent(\n                                                        item.link\n                                                    )}`}\n                                                    className=\"btn btn-outline-primary ti-control-play\"\n                                                ></Link>\n                                                <button\n                                                    className=\"btn btn-outline-danger ti-close ml-1\"\n                                                    onClick={() => {\n                                                        removeHistoryItem(item)\n                                                        setHistoryItems(getHistoryItems())\n                                                    }}\n                                                ></button>\n                                            </td>\n                                        </tr>\n                                    </>\n                                ))}\n                            </tbody>\n                        </table>\n                    </>\n                )}\n            </div>\n        )\n    }\n)\n","export function formatBytes(bytes: number, decimals: number = 2): string {\n    if (bytes === 0) return '0 Bytes'\n\n    const k = 1024\n    const dm = decimals < 0 ? 0 : decimals\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB']\n\n    const i = Math.floor(Math.log(bytes) / Math.log(k))\n\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i]\n}\n\nexport function sortBy<T>(\n    arr: T[],\n    key: (item: T) => unknown = (v) => v,\n    order: 'asc' | 'desc' = 'asc'\n): T[] {\n    const sorted = [...arr].sort((a, b) => {\n        const doCompare = (keyA: unknown, keyB: unknown): number => {\n            if (typeof keyA === 'number' && typeof keyB === 'number') {\n                return keyA < keyB ? -1 : keyA > keyB ? 1 : 0\n            }\n\n            if (keyA instanceof Array && keyB instanceof Array) {\n                const res = keyA.map((v, i) => doCompare(v, keyB[i])).filter((v) => v !== 0)\n                return res.length ? res[0] : 1\n            }\n\n            if (typeof keyA === 'object' && typeof keyB === 'object') {\n                return doCompare(Object.values(keyA ?? {})[0], Object.values(keyB ?? {})[0])\n            }\n\n            const stringA = String(keyA).toLowerCase()\n            const stringB = String(keyB).toLowerCase()\n\n            return stringA < stringB ? -1 : stringA > stringB ? 1 : 0\n        }\n\n        return doCompare(key(a), key(b))\n    })\n    return order === 'desc' ? sorted.reverse() : sorted\n}\n\nexport async function parseError(err: unknown): Promise<string> {\n    if (err instanceof Response) {\n        try {\n            const data = (await err.json()).error\n            if (!data) {\n                throw new Error()\n            }\n            return data\n        } catch {\n            return `Server returned error: ${err.statusText}`\n        }\n    }\n    return String(err)\n}\n\nexport function getExtension(filename: string): string {\n    const parts = filename.split('.')\n    return parts[parts.length - 1]\n}\n","import React, { useEffect, useState } from 'react'\nimport { useLocation, Link } from 'react-router-dom'\nimport { Alert } from 'react-bootstrap'\n\nimport { TorrentsApi, Torrent, TorrentFile } from '../helpers/client'\nimport { getApiConfig, apiDomain } from '../config'\nimport { formatBytes, sortBy, parseError } from '../helpers'\nimport { addHistoryItem } from '../helpers/history'\nimport { withBearer } from './parts/auth'\n\nexport const PlayComponent = withBearer(({ bearer }) => {\n    const [torrent, setTorrent] = useState<Torrent>()\n    const [error, setError] = useState('')\n    const location = useLocation()\n\n    const searchParams = new URLSearchParams(location.search)\n    const link = searchParams.get('torrent')\n    const file = searchParams.get('file')\n\n    const torrentFile = torrent?.files.find((v) => v.path === file)\n\n    useEffect(() => {\n        const action = async () => {\n            if (link) {\n                const newTorrent = await new TorrentsApi(getApiConfig({ bearer })).createTorrent({\n                    torrent: link,\n                })\n                setTorrent(newTorrent)\n                addHistoryItem({\n                    name: newTorrent.name,\n                    link: newTorrent.link,\n                })\n            } else {\n                setError('Torrent link is not specified')\n            }\n        }\n        action().catch(async (err) => {\n            setError(await parseError(err))\n        })\n    }, [link, bearer])\n\n    return (\n        <div className=\"container\">\n            {error && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    {error}\n                </div>\n            )}\n            {!torrent && !error && (\n                <div className=\"text-center\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )}\n            {torrent && link && (\n                <>\n                    <h3>\n                        <small>{torrent.name}</small>\n                    </h3>\n                    {!file ? (\n                        <table className=\"table\">\n                            <thead>\n                                <tr>\n                                    <th>File</th>\n                                    <th>Size</th>\n                                    <th>Play</th>\n                                    <th>Link</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {sortBy(torrent.files, (v) => v.name).map((v) => (\n                                    <tr>\n                                        <td>\n                                            {v.path\n                                                .split('/')\n                                                .map((part, index, arr) =>\n                                                    index + 1 < arr.length ? (\n                                                        <span className=\"text-muted\">\n                                                            {part} /{' '}\n                                                        </span>\n                                                    ) : (\n                                                        part\n                                                    )\n                                                )}\n                                        </td>\n                                        <td>{formatBytes(v.length)}</td>\n                                        <td>\n                                            <Link\n                                                to={`?torrent=${encodeURIComponent(\n                                                    link\n                                                )}&file=${encodeURIComponent(v.path)}`}\n                                                className=\"btn btn-outline-primary ti-control-play\"\n                                            ></Link>\n                                        </td>\n                                        <td>\n                                            <a\n                                                href={apiDomain + v.stream}\n                                                className=\"btn btn-outline-primary ti-cloud-down\"\n                                            >\n                                                {' '}\n                                            </a>\n                                        </td>\n                                    </tr>\n                                ))}\n                            </tbody>\n                        </table>\n                    ) : (\n                        <>\n                            <h5 className=\"text-muted\">\n                                <small>{file}</small>\n                                {torrentFile && (\n                                    <a\n                                        href={apiDomain + torrentFile.stream}\n                                        className=\"btn ti-cloud-down text-primary\"\n                                    >\n                                        {' '}\n                                    </a>\n                                )}{' '}\n                                - <Link to={`?torrent=${encodeURIComponent(link)}`}>view all</Link>\n                            </h5>\n                        </>\n                    )}\n                    {file && link && torrentFile && (\n                        <>\n                            <TorrentFileComponent file={torrentFile} />\n                            <br />\n                            <div className=\"form-group\">\n                                <input\n                                    className=\"form-control\"\n                                    value={apiDomain + torrentFile.stream}\n                                />\n                            </div>\n                        </>\n                    )}\n                </>\n            )}\n        </div>\n    )\n})\n\nfunction TorrentFileComponent({ file }: { file: TorrentFile }): JSX.Element {\n    if (file.type.includes('video')) {\n        return <VideoPlayerComponent video={apiDomain + file.stream} type={file.type} />\n    }\n    if (file.type.includes('image')) {\n        return <ImageComponent image={apiDomain + file.stream} name={file.name} />\n    }\n    if (file.type.includes('text')) {\n        return <TextComponent text={apiDomain + file.stream} />\n    }\n    return (\n        <div>\n            <Alert variant=\"warning\">\n                Unknown file type: {file.type}\n                <a\n                    href={apiDomain + file.stream}\n                    className=\"btn btn-outline-primary ti-cloud-down ml-5\"\n                >\n                    Direct link\n                </a>\n            </Alert>\n        </div>\n    )\n}\n\nfunction ImageComponent({ image, name }: { image: string; name: string }): JSX.Element {\n    return (\n        <div className=\"w-100 text-center\">\n            <img src={image} alt={name} />\n        </div>\n    )\n}\n\nfunction TextComponent({ text }: { text: string }): JSX.Element {\n    const [value, setValue] = useState<string>()\n\n    useEffect(() => {\n        fetch(text).then(async (v) => setValue(await v.text()))\n    })\n\n    return (\n        <div className=\"card card-body\" style={{ maxHeight: '500px' }}>\n            {value === undefined && (\n                <div className=\"text-center\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )}\n            <pre>{value}</pre>\n        </div>\n    )\n}\n\nfunction VideoPlayerComponent({ video, type }: { video: string; type: string }): JSX.Element {\n    return (\n        <div className=\"embed-responsive embed-responsive-16by9\">\n            <video width=\"720\" controls>\n                <source src={video} type={type} />\n                Your browser does not support HTML5 video.\n            </video>\n        </div>\n    )\n}\n","import { useMemo, useContext } from 'react'\nimport { __RouterContext } from 'react-router'\n\nexport function useSearchParam<T extends string>(key: string): T | undefined {\n    const { location } = useContext(__RouterContext)\n    const params = useMemo(() => new URLSearchParams(location.search), [location.search])\n\n    return params.get(key) as T\n}\n\nexport function useSearchParamsHandler() {\n    const { location, history } = useContext(__RouterContext)\n\n    return (\n        args: { set?: Record<string, string>; delete?: readonly string[] },\n        replace: boolean = false\n    ) => {\n        const params = new URLSearchParams(location.search)\n        if (args.delete) {\n            args.delete.forEach((v) => {\n                params.delete(v)\n            })\n        }\n        if (args.set) {\n            Object.entries(args.set).forEach(([k, v]) => {\n                if (v) {\n                    params.set(k, v)\n                } else {\n                    params.delete(k)\n                }\n            })\n        }\n        if (replace) {\n            history.replace({\n                search: params.toString().replace(encodeURIComponent(':'), ':'),\n            })\n        } else {\n            history.push({\n                search: params.toString().replace(encodeURIComponent(':'), ':'),\n            })\n        }\n    }\n}\n","import React, { useState, useEffect, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\nimport {\n    Container,\n    Row,\n    Col,\n    FormControl,\n    Alert,\n    Button,\n    InputGroup,\n    Form,\n    Table,\n    Badge,\n} from 'react-bootstrap'\nimport { format } from 'timeago.js'\n\nimport { BrowseApi, Provider, ProviderTorrent } from '../helpers/client'\nimport { useSearchParam, useSearchParamsHandler } from '../helpers/hooks'\nimport { parseError } from '../helpers'\nimport { withBearer } from './parts/auth'\nimport { getApiConfig } from '../config'\n\nexport const BrowseComponent = withBearer(({ bearer }) => {\n    const [error, setError] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    const [providers, setProviders] = useState<Provider[]>([])\n    const [torrents, setTorrents] = useState<ProviderTorrent[]>()\n\n    const handler = useSearchParamsHandler()\n    const provider = useSearchParam('provider') ?? ''\n    const category = useSearchParam('category') ?? ''\n    const query = useSearchParam('query') ?? ''\n\n    useEffect(() => {\n        const doAction = async () => {\n            setProviders(await new BrowseApi(getApiConfig({ bearer })).getProviders())\n        }\n        doAction().catch(async (err) => setError(await parseError(err)))\n    }, [bearer])\n\n    const canSearch = provider && query\n\n    useEffect(() => {\n        const doAction = async () => {\n            setError('')\n            if (canSearch) {\n                try {\n                    setLoading(true)\n                    setTorrents(\n                        await new BrowseApi(getApiConfig({ bearer })).searchTorrents({\n                            provider,\n                            query,\n                            category,\n                        })\n                    )\n                } finally {\n                    setLoading(false)\n                }\n            }\n        }\n        doAction().catch(async (err) => setError(await parseError(err)))\n    }, [provider, query, category, canSearch, bearer])\n\n    const providerNames = providers.map((v) => v.name).sort()\n    const categories = provider ? providers.find((v) => v.name === provider)?.categories ?? [] : []\n\n    return (\n        <Container>\n            <Form\n                onSubmit={(event) => {\n                    event.preventDefault()\n                    const formQuery = new FormData(event.target as HTMLFormElement).get('query')\n                    handler({\n                        set: {\n                            query: typeof formQuery === 'string' ? formQuery : '',\n                        },\n                    })\n                }}\n            >\n                <Row>\n                    <Col sm className=\"mt-2\">\n                        <Row>\n                            <Col>\n                                <FormControl\n                                    as=\"select\"\n                                    value={provider}\n                                    onChange={(event) => {\n                                        handler({\n                                            set: {\n                                                provider: event.target.value,\n                                            },\n                                            delete: ['category', 'query'],\n                                        })\n                                    }}\n                                >\n                                    <option value=\"\">-- select provider --</option>\n                                    {providerNames.map((v) => (\n                                        <option key={v} value={v}>\n                                            {v}\n                                        </option>\n                                    ))}\n                                </FormControl>\n                            </Col>\n                            <Col>\n                                <FormControl\n                                    as=\"select\"\n                                    value={category}\n                                    onChange={(event) => {\n                                        handler({\n                                            set: {\n                                                category: event.target.value,\n                                            },\n                                            delete: ['query'],\n                                        })\n                                    }}\n                                    disabled={!provider}\n                                >\n                                    <option value=\"\">All categories</option>\n                                    {categories.map((v, vi) => (\n                                        <Fragment key={vi}>\n                                            {v.subcategories.length > 0 ? (\n                                                <>\n                                                    <optgroup label={v.name}>\n                                                        <option value={v.id}>All {v.name}</option>\n                                                        {v.subcategories.map((s, si) => (\n                                                            <option value={s.id} key={si}>\n                                                                {s.name}\n                                                            </option>\n                                                        ))}\n                                                    </optgroup>\n                                                </>\n                                            ) : (\n                                                <>\n                                                    <option value={v.id}>{v.name}</option>\n                                                </>\n                                            )}\n                                        </Fragment>\n                                    ))}\n                                </FormControl>\n                            </Col>\n                        </Row>\n                    </Col>\n                    <Col sm className=\"mt-2\">\n                        <InputGroup>\n                            <FormControl\n                                disabled={!provider}\n                                defaultValue={query}\n                                type=\"search\"\n                                placeholder=\"Search...\"\n                                name=\"query\"\n                            />\n                            <InputGroup.Append>\n                                <Button\n                                    disabled={!provider}\n                                    variant=\"outline-primary\"\n                                    type=\"submit\"\n                                >\n                                    <svg\n                                        xmlns=\"http://www.w3.org/2000/svg\"\n                                        width={24}\n                                        height={24}\n                                        viewBox=\"0 0 24 24\"\n                                        fill=\"none\"\n                                        stroke=\"currentColor\"\n                                        strokeWidth={2}\n                                        strokeLinecap=\"round\"\n                                        strokeLinejoin=\"round\"\n                                        className=\"feather feather-search\"\n                                    >\n                                        <circle cx={11} cy={11} r={8} />\n                                        <line x1={21} y1={21} x2=\"16.65\" y2=\"16.65\" />\n                                    </svg>\n                                </Button>\n                            </InputGroup.Append>\n                        </InputGroup>\n                    </Col>\n                </Row>\n            </Form>\n            {error && (\n                <Alert variant=\"danger\" className=\"mt-5\">\n                    {error}\n                </Alert>\n            )}\n            {loading && (\n                <div className=\"d-flex justify-content-center mt-5\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )}\n            {!loading && torrents?.length === 0 && canSearch && (\n                <Alert variant=\"info\" className=\"mt-5\">\n                    No results were found\n                </Alert>\n            )}\n            {!loading && (\n                <Table className=\"mt-3\">\n                    <tbody>\n                        {torrents?.map((torrent, ti) => (\n                            <>\n                                <tr key={ti}>\n                                    <td>\n                                        {torrent.link ? (\n                                            <a\n                                                href={torrent.link}\n                                                target=\"_blank\"\n                                                rel=\"noopener noreferrer\"\n                                            >\n                                                {torrent.name}\n                                            </a>\n                                        ) : (\n                                            torrent.name\n                                        )}{' '}\n                                        <Badge\n                                            variant=\"secondary\"\n                                            pill={true}\n                                            style={{ cursor: 'pointer' }}\n                                            onClick={() => {\n                                                handler({\n                                                    set: {\n                                                        category: torrent.category.id,\n                                                    },\n                                                })\n                                            }}\n                                        >\n                                            {torrent.category.name}\n                                        </Badge>{' '}\n                                        {torrent.isVip && <i className=\"ti-crown text-warning\"></i>}\n                                    </td>\n                                    <td className=\"text-right\" style={{ whiteSpace: 'nowrap' }}>\n                                        {torrent.size}\n                                    </td>\n                                    <td className=\"text-right\" style={{ whiteSpace: 'nowrap' }}>\n                                        {!!torrent.time && format(new Date(torrent.time))}\n                                    </td>\n                                    <td className=\"text-right\" style={{ whiteSpace: 'nowrap' }}>\n                                        {torrent.seeds != null && (\n                                            <span className=\"text-success\">\n                                                <small className=\"ti-arrow-up\"></small>\n                                                {torrent.seeds}\n                                            </span>\n                                        )}{' '}\n                                        {torrent.peers != null && (\n                                            <span className=\"text-danger\">\n                                                <small className=\"ti-arrow-down\"></small>\n                                                {torrent.peers}\n                                            </span>\n                                        )}{' '}\n                                    </td>\n                                    <td className=\"text-right\" style={{ whiteSpace: 'nowrap' }}>\n                                        {torrent.downloads != null && (\n                                            <span>\n                                                <small className=\"ti-download\"></small>{' '}\n                                                {torrent.downloads}\n                                            </span>\n                                        )}\n                                    </td>\n                                    <td className=\"text-right\">\n                                        <Link\n                                            to={`/play?torrent=${encodeURIComponent(\n                                                torrent.magnet\n                                            )}`}\n                                            className=\"btn btn-outline-primary ti-control-play\"\n                                        ></Link>\n                                    </td>\n                                </tr>\n                            </>\n                        ))}\n                    </tbody>\n                </Table>\n            )}\n        </Container>\n    )\n})\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { format } from 'timeago.js'\n\nimport { DashboardApi, TorrentsApi, Torrent, Usage } from '../helpers/client'\nimport { formatBytes, parseError } from '../helpers'\nimport { getApiConfig } from '../config'\nimport { withBearer } from './parts/auth'\n\nexport const DashboardComponent = withBearer(({ bearer }) => {\n    const [torrents, setTorrents] = useState<Torrent[]>()\n    const [usage, setUsage] = useState<Usage>()\n    const [error, setError] = useState('')\n\n    const updateTorrents = async () =>\n        new TorrentsApi(getApiConfig({ bearer }))\n            .getTorrents()\n            .then((v) => setTorrents(v))\n            .catch(async (err) => {\n                setError(await parseError(err))\n            })\n    const updateUsage = async () =>\n        new DashboardApi(getApiConfig({ bearer }))\n            .getUsage()\n            .then((v) => setUsage(v))\n            .catch(async (err) => {\n                setError(await parseError(err))\n            })\n\n    useEffect(() => {\n        let torrentsInterval: NodeJS.Timeout\n        let usageInterval: NodeJS.Timeout\n\n        updateTorrents().then(() => {\n            torrentsInterval = setInterval(() => {\n                updateTorrents()\n            }, 5 * 1000)\n        })\n        updateUsage().then(() => {\n            usageInterval = setInterval(() => {\n                updateTorrents()\n            }, 60 * 1000)\n        })\n\n        return () => {\n            clearInterval(torrentsInterval)\n            clearInterval(usageInterval)\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <div className=\"container\">\n            {error && (\n                <div className=\"alert alert-danger\" role=\"alert\">\n                    {error}\n                </div>\n            )}\n            {!torrents && !error && (\n                <div className=\"text-center\">\n                    <div className=\"spinner-border\" role=\"status\">\n                        <span className=\"sr-only\">Loading...</span>\n                    </div>\n                </div>\n            )}\n            {usage && (\n                <div className=\"card-deck mb-3 text-center\">\n                    <div className=\"card mb-4 box-shadow\">\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">Disk space</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <h2 className=\"card-title pricing-card-title\">\n                                {formatBytes(usage.totalDiskSpace - usage.freeDiskSpace)}\n                                <small className=\"text-muted\">\n                                    / {formatBytes(usage.totalDiskSpace)}\n                                </small>\n                            </h2>\n                            <div className=\"progress\">\n                                <div\n                                    className=\"progress-bar\"\n                                    role=\"progressbar\"\n                                    style={{\n                                        width: `${\n                                            ((usage.totalDiskSpace - usage.freeDiskSpace) /\n                                                usage.totalDiskSpace) *\n                                            100\n                                        }%`,\n                                    }}\n                                ></div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card mb-4 box-shadow\">\n                        <div className=\"card-header\">\n                            <h4 className=\"my-0 font-weight-normal\">Torrents space</h4>\n                        </div>\n                        <div className=\"card-body\">\n                            <h2 className=\"card-title pricing-card-title\">\n                                {formatBytes(usage.usedTorrentSpace)}\n                                <small className=\"text-muted\">\n                                    / {formatBytes(usage.freeDiskSpace + usage.usedTorrentSpace)}\n                                </small>\n                            </h2>\n                            <div className=\"progress\">\n                                <div\n                                    className=\"progress-bar\"\n                                    role=\"progressbar\"\n                                    style={{\n                                        width: `${\n                                            (usage.usedTorrentSpace /\n                                                (usage.freeDiskSpace + usage.usedTorrentSpace)) *\n                                            100\n                                        }%`,\n                                    }}\n                                ></div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )}\n            {torrents && (\n                <>\n                    {torrents.length ? (\n                        <>\n                            <table className=\"table\">\n                                <thead>\n                                    <tr>\n                                        <th>Name</th>\n                                        <th>Download</th>\n                                        <th>Created</th>\n                                        <th>Play</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {torrents.map((torrent) => (\n                                        <>\n                                            <tr>\n                                                <td>{torrent.name}</td>\n                                                <td>\n                                                    {formatBytes(torrent.downloaded)} (\n                                                    {formatBytes(torrent.downloadSpeed)}\n                                                    /s)\n                                                </td>\n                                                <td>{format(torrent.started)}</td>\n                                                <td>\n                                                    <Link\n                                                        to={`/play?torrent=${encodeURIComponent(\n                                                            torrent.link\n                                                        )}`}\n                                                        className=\"btn btn-outline-primary ti-control-play\"\n                                                    ></Link>\n                                                </td>\n                                            </tr>\n                                        </>\n                                    ))}\n                                </tbody>\n                            </table>\n                        </>\n                    ) : (\n                        <div className=\"alert alert-warning\" role=\"alert\">\n                            No active torrents at the moment\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    )\n})\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Switch, Route } from 'react-router'\n\nimport { HomeComponent } from './home'\nimport { PlayComponent } from './play'\nimport { BrowseComponent } from './browse'\nimport { DashboardComponent } from './dashboard'\n\nexport function ContentComponent(): JSX.Element {\n    return (\n        <div>\n            <div className=\"d-flex flex-column flex-md-row align-items-center p-3 px-md-4 mb-3 bg-white border-bottom box-shadow\">\n                <h5 className=\"my-0 mr-md-auto font-weight-normal\">\n                    <Link className=\"text-decoration-none text-dark\" to=\"/\">\n                        Torrent Stream Server\n                    </Link>\n                </h5>\n                <nav className=\"my-2 my-md-0 mr-md-3\">\n                    <Link className=\"p-2 text-dark\" to=\"/\">\n                        Home\n                    </Link>\n                    <Link className=\"p-2 text-dark\" to=\"/browse\">\n                        Browse\n                    </Link>\n                    <Link className=\"p-2 text-dark\" to=\"/dashboard\">\n                        Dashboard\n                    </Link>\n                </nav>\n                <a\n                    className=\"btn btn-outline-primary\"\n                    href=\"https://github.com/KiraLT/torrent-stream-server\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Find on GitHub\n                </a>\n            </div>\n\n            <Switch>\n                <Route path=\"/\" component={HomeComponent} exact />\n                <Route path=\"/play\" component={PlayComponent} exact />\n                <Route path=\"/browse\" component={BrowseComponent} exact />\n                <Route path=\"/dashboard\" component={DashboardComponent} exact />\n            </Switch>\n        </div>\n    )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then((registration) => {\n                registration.unregister()\n            })\n            .catch((error) => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { setGlobal } from 'reactn'\n\nimport { defaultState } from './config'\nimport { ContentComponent } from './components/content'\nimport { register } from './serviceWorker'\n\nexport function initApp(target: HTMLElement | null): void {\n    setupState()\n    registerWebworker()\n\n    ReactDOM.render(\n        <BrowserRouter>\n            <ContentComponent />\n        </BrowserRouter>,\n        target\n    )\n}\n\nfunction setupState(): void {\n    setGlobal(defaultState)\n}\n\nfunction registerWebworker(): void {\n    register({\n        onUpdate: () => {\n            const div = document.createElement('div')\n            div.style.position = 'fixed'\n            div.style.bottom = '0'\n            div.style.left = '0'\n            div.style.right = '0'\n            div.style.zIndex = '9999'\n            div.style.textAlign = 'center'\n            div.style.background = 'rgba(208, 208, 208, 0.90)'\n            div.style.padding = '2px'\n            div.className = 'text-secondary'\n            div.innerHTML = `\n                New content is available and will be used when all tabs for this page are closed\n                <button class=\"btn btn-link\" onClick=\"this.parentNode.style.display = 'none'\">\n                    x\n                </button>`\n            document.body.appendChild(div)\n        },\n    })\n}\n","import { initApp } from './app'\n\ninitApp(document.getElementById('root'))\n"],"sourceRoot":""}